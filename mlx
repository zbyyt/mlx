#!/bin/env bash

###########################################
# AUTHOR: IAROM MADDEN
###########################################

# init


_ini() {

    declare -rg cmd=$1 && shift 1

    declare -rg mlx_dir_ru="/run/user/$UID/mutt"
    declare -rg mlx_dir_ri="$mlx_dir_ru/rip"
    declare -rg mlx_fil_md="$mlx_dir_ru/mlx.md"
    declare -rg mlx_fil_mi="$mlx_dir_ru/mlx.mime"
    declare -rg mlx_fil_hlx="$mlx_dir_ru/mlx.html"
    declare -rg mlx_fil_hlr="$mlx_dir_ri/text-html2"
    declare -rg mlx_fil_hlr1="$mlx_dir_ri/text-html1"
    declare -rg mlx_fil_hlr0="$mlx_dir_ri/text-html0"
    declare -rg mlx_fil_txt1="$mlx_dir_ri/text-plain0"
    declare -rg mlx_fil_txt3="$mlx_dir_ri/text-plain1"
    declare -rg mlx_fil_txt2="$mlx_dir_ri/textfile0"
    declare -rg browser_win="qb m"
    declare -rg browser_winf="$BROWSER_WINF"

    mkdir -p "${mlx_dir_ru}" "${mlx_dir_ri}" ;}
    #browser_win="$BROWSER_WIN"
    #mlx_fil_hlr="$mlx_dir_ri/textfile2"
    #mlx_htmy="$mlx_dir_ri/mlx.html"

_prn_uid() { printf "%s\n" "$UID"; }


# remote sync ####################################

_remote_sync_ini1() {

  declare -rg cfg_notmuch="/home/$USER/.config/notmuch/notmuchrc"
  declare -rg cfg_mbsync="/home/$USER/.config/isync/isyncrc"; }


_remote_sync_run() { 
    
    STATE="$(nmcli networking connectivity)"
    [ ${STATE} = 'full' ] || { echo "No internet connection."; exit 1; }
    mbsync -c "${cfg_mbsync}" --all
    notmuch --config="${cfg_notmuch}" new  ;} ##--quiet >> /dev/null


_remote_sync() {

  _remote_sync_ini1
  _remote_sync_run ;}


# browsing #############################################

_term_b()  { elinks "${mlx_fil_hlx}" & }
_b_float() { $browser_winf "file://$mailf" ; }
_brx()     { $browser_win "${mlx_fil_hlx}" & }


# piping ###############################################

_pip_brx() {

    #mv ${mlx_dir_ri}/* "${mlx_dir_ri}/ztodelete/"
    ripmime --name-by-type --overwrite -d "${mlx_dir_ri}" -i -
    mv "${mlx_fil_hlr}" "${mlx_fil_hlx}" > /dev/null 2>&1 &
    _brx > /dev/null 2>&1 &
}

_txt2html() { pandoc --quiet -s -f markdown -t html5 -o ${mlx_fil_hlx} ${1}; }

_clean() { rm -f "$FIFO_X"; exit 0;}


_listen() {
    
    trap _clean SIGINT SIGTERM

    rm -f "${FIFO_X:="/tmp/mutt-fifo"}"
    mkfifo "${FIFO_X:="/tmp/mutt-fifo"}" >/dev/null 2>&1
    mkfifo "${FIFO_GUARD:="/tmp/mutt-fifo-guard"}" >/dev/null 2>&1

    #mkfifo "${fifo_log:="/tmp/fifo-log"}"
    
    >"${FIFO_X}" <"${FIFO_GUARD}" & # guard: prevents eof closes on reader
    #>"${fifo_log}" <"${FIFO_GUARD2}" & # guard: prevents eof closes on reader

    while read -r x ; do

        timeout 0.1 cat "${FIFO_X}" > /dev/null 2>&1 # interupt que
        ripmime --name-by-type --overwrite -d "${mlx_dir_ri}" -i "${mlx_fil_mi}"

        if [ -e "${mlx_fil_hlr}" ]; then
            mv "${mlx_fil_hlr}" "${mlx_fil_hlx}" > /dev/null 2>&1
        
        elif [ -e "${mlx_fil_hlr0}" ]; then
            mv "${mlx_fil_hlr0}" "${mlx_fil_hlx}" > /dev/null 2>&1

        elif [ -e "${mlx_fil_hlr1}" ]; then
            mv "${mlx_fil_hlr1}" "${mlx_fil_hlx}" > /dev/null 2>&1
        
        elif [ -e "${mlx_fil_txt2}" ]; then
            #mv "${mlx_fil_txt2}" "${mlx_fil_hlx}" > /dev/null 2>&1
            _txt2html "${mlx_fil_txt2}"
        
        elif [ -e "${mlx_fil_txt3}" ]; then
            #mv "${mlx_fil_txt3}" "${mlx_fil_hlx}" > /dev/null 2>&1
            _txt2html "${mlx_fil_txt3}"

        elif [ -e "${mlx_fil_txt1}" ]; then
            #mv "${mlx_fil_txt1}" "${mlx_fil_hlx}" > /dev/null 2>&1 &
            _txt2html "${mlx_fil_txt1}"

        fi

        _brx > /dev/null 2>&1 &

        rm -R ${mlx_dir_ri}/* > /dev/null 2>&1
        
        sleep 0.3

    done < "${FIFO_X}"
    
    _clean;}


## CASES ######################################

_main() {

    _ini ${@}

    case $cmd in # todo: standardise names
        sync)       _remote_sync ;;
        uid)        _prn_uid ;;
        # view
        qb.rip)     _listen ;;
        qb.rip.y)   _pip_brx  ${@} ;;
        browser)    _b ;;
        qb.float)   _b_float ;;
        term)       _term_b ;;
        term_view)  _term_view ;;# MD VIEWER VARIATIONS
        # convert
        md2html)     ;; #?
    esac
}


_main "${@}"


#_bry()     { $browser_win "${mlx_fil_hlx}" & sleep 0.5s; }
#_brx()     { $browser_win "${mlx_fil_hlr}" & sleep 0.5s; }

